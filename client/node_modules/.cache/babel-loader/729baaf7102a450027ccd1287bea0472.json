{"ast":null,"code":"var _jsxFileName = \"C:\\\\Local_repozitori\\\\news\\\\client\\\\src\\\\components\\\\LoggingPage.js\";\nimport React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport { createStore } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoggingPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      unam: \"\"\n    };\n\n    this.onInputName = e => {\n      localStorage.username = this.state.unam;\n    };\n  }\n\n  render() {\n    const {\n      unam\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n            value: unam,\n            name: \"unam\",\n            onChange: this.onInputName,\n            \"aria-describedby\": \"basic-addon2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password_input\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-right\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", store.dispatch({\n          type: \"counter/incremented\"\n        }), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoggingPage;\n/*\r\nИмпортируем функцию \"createStore\", которая сосздаст хранилище\r\n*/\n\n/*\r\n\"counterReducer\" - это редюсер. Специальная чистая функция, которая генерирует новую версию состояния на основе текущего стейта и созданого события. Принимает \"стэйт\" и \"действие\". На ружу выдает новую версию объекта \"стейт\".\r\n*/\n\nfunction counterReducer(state = {\n  value: 0\n}, action) {\n  switch (action.type) {\n    case \"counter/incremented\":\n      return {\n        value: state.value + 1\n      };\n\n    case \"counter/decremented\":\n      return {\n        value: state.value - 1\n      };\n\n    default:\n      return state;\n  }\n}\n/*\r\n\"store\" - это хранилище в виде объекта. Умеет возвращать текущий стейт. Умеет выполнять разные действия. Позволяет подписаться на изменение состояния\r\n*/\n\n\nlet store = createStore(counterReducer);\nstore.subscribe(() => console.log(store.getState()));\n/*\r\nЭто действия, которые изменяют стэйт\r\n*/\n\nstore.dispatch({\n  type: \"counter/incremented\"\n}); // {value: 1}","map":{"version":3,"sources":["C:/Local_repozitori/news/client/src/components/LoggingPage.js"],"names":["React","Form","Button","Row","createStore","LoggingPage","Component","state","unam","onInputName","e","localStorage","username","render","store","dispatch","type","counterReducer","value","action","subscribe","console","log","getState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,WAAT,QAA4B,OAA5B;;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACNC,MAAAA,IAAI,EAAE;AADA,KADgC;;AAAA,SAOxCC,WAPwC,GAOzBC,CAAD,IAAO;AAACC,MAAAA,YAAY,CAACC,QAAb,GAAwB,KAAKL,KAAL,CAAWC,IAAnC;AAAwC,KAPtB;AAAA;;AAUxCK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AAEA,wBACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACE,QAAC,IAAD;AAAA,gCAEE,QAAC,IAAD,CAAM,KAAN;AAAA,iCACE,QAAC,IAAD,CAAM,OAAN;AACC,YAAA,WAAW,EAAC,6FADb;AAEC,YAAA,KAAK,EAAEC,IAFR;AAGC,YAAA,IAAI,EAAC,MAHN;AAIC,YAAA,QAAQ,EAAE,KAAKC,WAJhB;AAKC,gCAAiB;AALlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAcE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,gBAAtB;AAAA,iCACE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,UAAnB;AAA8B,YAAA,WAAW,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAdF,eAiBE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAwBE;AAAA,wBAAOK,KAAK,CAACC,QAAN,CAAe;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAf,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AAzCuC;;AA4C1C,eAAeX,WAAf;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AACA,SAASY,cAAT,CAAwBV,KAAK,GAAG;AAAEW,EAAAA,KAAK,EAAE;AAAT,CAAhC,EAA8CC,MAA9C,EAAsD;AACpD,UAAQA,MAAM,CAACH,IAAf;AACE,SAAK,qBAAL;AACE,aAAO;AAAEE,QAAAA,KAAK,EAAEX,KAAK,CAACW,KAAN,GAAc;AAAvB,OAAP;;AACF,SAAK,qBAAL;AACE,aAAO;AAAEA,QAAAA,KAAK,EAAEX,KAAK,CAACW,KAAN,GAAc;AAAvB,OAAP;;AACF;AACE,aAAOX,KAAP;AANJ;AAQD;AACD;AACA;AACA;;;AACA,IAAIO,KAAK,GAAGV,WAAW,CAACa,cAAD,CAAvB;AACAH,KAAK,CAACM,SAAN,CAAgB,MAAMC,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACS,QAAN,EAAZ,CAAtB;AAGA;AACA;AACA;;AACAT,KAAK,CAACC,QAAN,CAAe;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAf,E,CACA","sourcesContent":["import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { createStore } from \"redux\";\r\n\r\nclass LoggingPage extends React.Component {\r\n  state = {\r\n    unam: \"\",\r\n    \r\n  };\r\n  \r\n\r\n  onInputName = (e) => {localStorage.username = this.state.unam};\r\n\r\n\r\n  render() {\r\n    const { unam } = this.state;\r\n\r\n    return (\r\n      <Row className=\"justify-content-md-center\">\r\n        <Form>\r\n         \r\n          <Form.Group>\r\n            <Form.Control \r\n             placeholder=\"Имя пользователя\" \r\n             value={unam}\r\n             name=\"unam\"\r\n             onChange={this.onInputName}\r\n             aria-describedby=\"basic-addon2\"\r\n\r\n\r\n            />\r\n\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password_input\">\r\n            <Form.Control type=\"password\" placeholder=\"Пароль\" />\r\n          </Form.Group>\r\n          <div className=\"text-right\">\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Отправить\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n        <div> {store.dispatch({ type: \"counter/incremented\" })} </div>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoggingPage;\r\n\r\n\r\n\r\n/*\r\nИмпортируем функцию \"createStore\", которая сосздаст хранилище\r\n*/\r\n\r\n/*\r\n\"counterReducer\" - это редюсер. Специальная чистая функция, которая генерирует новую версию состояния на основе текущего стейта и созданого события. Принимает \"стэйт\" и \"действие\". На ружу выдает новую версию объекта \"стейт\".\r\n*/\r\nfunction counterReducer(state = { value: 0 }, action) {\r\n  switch (action.type) {\r\n    case \"counter/incremented\":\r\n      return { value: state.value + 1 };\r\n    case \"counter/decremented\":\r\n      return { value: state.value - 1 };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n/*\r\n\"store\" - это хранилище в виде объекта. Умеет возвращать текущий стейт. Умеет выполнять разные действия. Позволяет подписаться на изменение состояния\r\n*/\r\nlet store = createStore(counterReducer);\r\nstore.subscribe(() => console.log(store.getState()));\r\n\r\n\r\n/*\r\nЭто действия, которые изменяют стэйт\r\n*/\r\nstore.dispatch({ type: \"counter/incremented\" });\r\n// {value: 1}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}